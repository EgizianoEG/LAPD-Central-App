{
  "$schema": "http://json-schema.org/draft-07/schema",

  "type": "object",
  "title": "Secrets.json Sechema",
  "description": "The JSON schema definition for the mandatory 'Secrets.json' file storing confidential data.",
  "required": ["Discord", "Roblox", "MongoDB", "OpenWeather"],

  "properties": {
    "Discord": {
      "type": "object",
      "description": "A container for all related Discord secret values.",
      "required": ["ClientID", "BotToken", "TestGuildId", "BotDevs"],
      "properties": {
        "ClientID": {
          "type": "string",
          "title": "Snowflake ID",
          "pattern": "^\\d{15,22}$",
          "description": "The application's (bot) snowflake ID."
        },
        "BotToken": {
          "type": "string",
          "pattern": "^\\w+\\.\\w+\\.\\w+$",
          "description": "The Discord application's (bot) bot token."
        },
        "TestGuildId": {
          "type": "string",
          "title": "Snowflake ID",
          "pattern": "^\\d{15,22}$",
          "description": "The serverâ€™s snowflake ID; a server that will be utilized for testing the bot and enabling particular development commands for it."
        },
        "BotDevs": {
          "type": "array",
          "uniqueItems": true,
          "description": "An array containing the bot's developers' IDs. Some features and unique commands will be made available through this.",
          "items": {
            "type": "string",
            "title": "Snowflake ID",
            "pattern": "^\\d{15,22}$"
          }
        }
      }
    },

    "Roblox": {
      "type": "object",
      "description": "A container for all related Roblox secret values.",
      "required": ["Cookie"],
      "properties": {
        "Cookie": {
          "type": "string",
          "description": "The account's cookie string will be used to access specific Roblox APIs. Not advised to be your primary account.",
          "pattern": "^_\\|WARNING:-DO-NOT-SHARE-THIS\\.--Sharing-this-will-allow-someone-to-log-in-as-you-and-to-steal-your-ROBUX-and-items\\.\\|_[0-9A-F]{500,2000}$"
        }
      }
    },

    "MongoDB": {
      "type": "object",
      "description": "A container for all related MongoDB secret values.",
      "required": ["URI", "Username", "UserPass", "DBName"],
      "properties": {
        "URI": {
          "type": "string",
          "minLength": 15,
          "description": "The MongoDB connection string excluding the username, password, and database name from it."
        },
        "Username": {
          "type": "string",
          "pattern": "^[\\da-zA-Z][\\w-]+$",
          "description": "The name of the MongoDB user you are using to provide read and write access to the specified database."
        },
        "UserPass": {
          "type": "string",
          "minLength": 1,
          "description": "The password for your MongoDB user, which will grant read and write access to the designated database."
        },
        "DBName": {
          "type": "string",
          "pattern": "^[^/\\\\\\.\\s\"\\$\\*\\<\\>\\:\\|\\?]{1,63}$",
          "description": "The database to use of your cluster. The cluster name is not meant to be this."
        }
      }
    },

    "OpenWeather": {
      "type": "object",
      "description": "A container for all related OpenWeather secret values.",
      "required": ["API_Key"],
      "minProperties": 1,
      "maxProperties": 2,
      "properties": {
        "API_Key": {
          "type": "string",
          "pattern": "^[0-9a-f]{32}$",
          "description": "The API key issued by OpenWeather will be used to access weather and forecast data via the OpenWeather API; a paid subscription is not necessary."
        },
        "WeatherGeoCoordinates": {
          "type": "object",
          "title": "Longitude and Latitude values",
          "description": "Geographical coordinates for the place where weather will be received. Not a required option; defaults to the coordinates for Los Angeles.",
          "required": ["lat", "lon"],
          "properties": {
            "lat": {
              "type": "number",
              "description": "The latitude of the location.",
              "minimum": -90,
              "maximum": 90
            },
            "lon": {
              "type": "number",
              "description": "The longitude of the location.",
              "minimum": -180,
              "maximum": 180
            }
          },
          "default": {
            "lat": 34.0393,
            "lon": -118.2693
          }
        }
      }
    }
  }
}
